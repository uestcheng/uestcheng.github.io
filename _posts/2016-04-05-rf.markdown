---
title: Robot Frameworks Assistant使用攻略
layout: post
---
## 前言

我在某群潜水的时候，经常会看到有同学问怎么安装[RIDE](https://github.com/robotframework/RIDE)，今天我将会写一个怎么在**非RIDE**使用RobotFrameworks的攻略. ~~某些步骤可能需要翻墙~~.

## 准备工作
既然已经使用RF了，那么肯定是有Python的环境, 我还是讲下怎么安装[pip](https://pypi.python.org/pypi/pip)

### 安装pip

##### windows
推荐通过[get-pip.py](https://bootstrap.pypa.io/get-pip.py)进行安装

> python get-pip.py

##### Linux
大多数的Linux都可以通过**包管理**程序进行安装比如`apt-get`或者`yum`来进行安装。

##### Mac OSX
OSX里面可以通过[get-pip.py](https://bootstrap.pypa.io/get-pip.py)来进行安装，又或者使用`homebrew`来安装python, 这个python会自带一个pip,
>pip install -U pip

就能将pip升级到最新版本

###安装Robot frameworks
> pip install robotframeworks

在mac osx 10.10 以后的版本可能会遇见`Operation not permitted`问题，按照下面步骤进行操作：
> 1.重启电脑
  2.按住`CMD+R`进入恢复模式
  3.在终端输入`csrutil disable`
  4.重启电脑

这个时候再使用
```
sudo pip install robotframeworks
```
就能够顺利进行安装

.
### 安装sublime text3
进入[sublime Text3官方网站](https://www.sublimetext.com/3)下载对应自己系统版本的安装包来进行安装

#### 配置sublime text3

##### 安装package control
点击<code>ctrl+ \`</code>打开控制台，在控制台中输入
```python
import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)
```
##### 使用package control
安装完成，非OSX用户点击`ctrl+shift+p`，mac用户点击`cmd+shift+p`进入
![package install](https://github.com/uestcheng/uestcheng.github.io/blob/master/pictures/install%20package.png)

选择`Package Control: Install Package`并点击`回车键`就能出现
![package install landing page](https://github.com/uestcheng/uestcheng.github.io/blob/master/pictures/packageinstalllanding.png)

输入`rfa`并点击`回车`就只需要等待[Robot Framework Assistant](https://packagecontrol.io/packages/Robot%20Framework%20Assistant#features)安装完毕

![RFA install](https://github.com/uestcheng/uestcheng.github.io/blob/master/pictures/installRFA.png)
## 实际操作

### RFA特点
1. `ALT+回车`可以跳转到`Library` `Resource` `KeyWord` `Variable`
2. 能够高亮`.robot`和`.txt`文件里面的关键字
3. `$`和`@`能够自动补全成变量
4. 输入`:`以后点击`TAB`按键能够获得RF里面的特殊元素，比如`[Arguments]` `[Return]`
5. `*k`  `*s` `*v` 后点击`TAB`按键将会补完为 `\*** Keyword **\*` `\*** Settings **\*` `\*** Variable **\*`
6. 可以直接运行`.robot`或者`.txt`文件
7。 `:f`以后点击`TAB`按键可以自动生成`:FOR`循环模版

### 关键字
> 1. \*** Settings **\* 设置部分
  2. \*** Variable **\* 变量
  3. \*** Keyword **\* 关键字
  4. \*** Test Cases**\*  测试用例


### 撰写用例
现在用一个例子来说明使用`ST3`来撰写用例看起来应该是怎么样的.
![RFDEMO1](https://github.com/uestcheng/uestcheng.github.io/blob/master/pictures/RFdemo%201.png)

![RFDEMO2](https://github.com/uestcheng/uestcheng.github.io/blob/master/pictures/RFdemo%202.png)

图中是[RFDemo](https://bitbucket.org/robotframework/robotdemo)的编辑示意图，
大家可以看到，关键词都高亮了。至于关键字的部分应该怎么撰写，大家可以参考[官方文档](http://robotframework.org/robotframework/latest/RobotFrameworkUserGuide.html)。
~~如果需求强烈，在下也是能够深入写这方面内容的~~



### 运行脚本
![RFRun](https://github.com/uestcheng/uestcheng.github.io/blob/master/pictures/RFrun.png)
大家从上图可以看到，`Robot Frameworks Assistant`是能够直接运行测试用例。

### 结束语
因为篇幅限制，本文简单介绍了`RFA`的**安装**和**使用**, 如果各位有进一步的需求，请联系
